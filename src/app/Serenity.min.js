!function() {
    angular.module("Serenity.Filter", []);
}(), function() {
    function Routes($stateProvider) {
        $stateProvider.state("countdown", {
            url: "/countdown",
            templateUrl: "modules/countdown/countdown-view.html",
            controller: "CountdownController"
        });
    }
    angular.module("Serenity.Countdown", []).config([ "$stateProvider", Routes ]);
}(), function() {
    function Routes($stateProvider) {
        $stateProvider.state("stopwatch", {
            url: "/stopwatch",
            templateUrl: "modules/stopwatch/stopwatch-view.html",
            controller: "StopwatchController"
        });
    }
    angular.module("Serenity.Stopwatch", []).config([ "$stateProvider", Routes ]);
}(), function() {
    function Filter() {
        function getHours(timeInMs) {
            var hours = parseInt(timeInMs / 36e5);
            return 10 > hours ? "0" + hours : hours;
        }
        function getMinutes(timeInMs) {
            var minutes = parseInt(timeInMs / 6e4 % 60);
            return 10 > minutes ? "0" + minutes : minutes;
        }
        function getSeconds(timeInMs) {
            var seconds = parseInt(timeInMs / 1e3 % 60);
            return 10 > seconds ? "0" + seconds : seconds;
        }
        function getMilliseconds(timeInMs) {
            var milliseconds = parseInt(timeInMs % 1e3);
            return 10 > milliseconds ? "00" + milliseconds : 100 > milliseconds ? "0" + milliseconds : milliseconds;
        }
        return function(timeInMs, format) {
            var time = format;
            return time = time.replace("hh", getHours(timeInMs)), time = time.replace("mm", getMinutes(timeInMs)), 
            time = time.replace("ss", getSeconds(timeInMs)), time = time.replace("ms", getMilliseconds(timeInMs));
        };
    }
    angular.module("Serenity.Filter").filter("time", Filter);
}(), function() {
    function Controller($scope, CountdownService) {
        function initialize() {
            $scope.countdown = CountdownService.getCountdown();
        }
        $scope.toggleCountdown = CountdownService.toggleCountdown, $scope.resetCountdown = CountdownService.resetCountdown, 
        $scope.setCountdownTimer = CountdownService.setCountdownTimer, $scope.getPercentageCountdownRemaining = CountdownService.getPercentageCountdownRemaining, 
        initialize();
    }
    angular.module("Serenity.Countdown").controller("CountdownController", [ "$scope", "CountdownService", Controller ]);
}(), function() {
    function Service($interval) {
        function isInEnglish(input) {
            return -1 !== input.indexOf("h") || -1 !== input.indexOf("m") || -1 !== input.indexOf("s");
        }
        function convertToMsFromEnglish(input) {
            var matches = input.match(/[0-9]+[a-z]/gi), time = 0;
            return angular.forEach(matches, function(match) {
                -1 !== match.indexOf("h") ? time += 36e5 * Number(match.slice(0, -1)) : -1 !== match.indexOf("m") ? time += 6e4 * Number(match.slice(0, -1)) : match.indexOf(!0) && (time += Number(1e3 * match.slice(0, -1)));
            }), time;
        }
        function updateCounter() {
            if (countdown.counting) {
                var now = new Date(), differenceInMs = now.getTime() - countdown.timestampCountingStarted.getTime();
                countdown.timeRemainingInMs - differenceInMs <= 0 ? (self.stopCountdown(), countdown.timeRemainingInMs = 0, 
                countdown.finished = !0, countdown.alertInterval = $interval(function() {
                    countdown.alert = !countdown.alert;
                }, countdown.alertPulseInMs)) : (countdown.timeRemainingInMs -= differenceInMs, 
                countdown.timestampCountingStarted = now);
            }
        }
        var self = this, countdown = {
            timestampCountingStarted: null,
            countdownTimerInMs: 0,
            inputTime: "25m",
            timeRemainingInMs: 0,
            counting: !1,
            countdownInterval: null,
            finished: !1,
            alert: !1,
            alertInterval: null,
            alertPulseInMs: 500
        };
        self.getCountdown = function() {
            return countdown;
        }, self.setCountdownTimer = function(input) {
            var timeInput = null;
            isInEnglish(input) && (timeInput = convertToMsFromEnglish(input)), countdown.countdownTimerInMs = timeInput, 
            self.resetCountdown();
        }, self.startCountdown = function() {
            countdown.counting = !0, countdown.timestampCountingStarted = new Date(), countdown.countingInterval = $interval(function() {
                updateCounter();
            }, 50);
        }, self.stopCountdown = function() {
            countdown.counting = !1, $interval.cancel(countdown.countingInterval), countdown.timestampCountingStarted = null;
        }, self.resetCountdown = function() {
            countdown.timeRemainingInMs = countdown.countdownTimerInMs, countdown.finished = !1, 
            countdown.alert = !1, $interval.cancel(countdown.alertInterval);
        }, self.toggleCountdown = function() {
            countdown.counting ? self.stopCountdown() : 0 === countdown.timeRemainingInMs ? self.resetCountdown() : self.startCountdown();
        }, self.getPercentageCountdownRemaining = function() {
            return countdown.countdownTimerInMs ? 100 * (countdown.timeRemainingInMs / countdown.countdownTimerInMs).toFixed(2) : 0;
        }, self.setCountdownTimer(countdown.inputTime);
    }
    angular.module("Serenity.Countdown").service("CountdownService", [ "$interval", Service ]);
}(), function() {
    function Controller($scope, StopwatchService) {
        function initialize() {
            $scope.stopwatch = StopwatchService.getStopwatch(), $scope.splits = StopwatchService.getSplits();
        }
        $scope.startStopwatch = StopwatchService.startStopwatch, $scope.stopStopwatch = StopwatchService.stopStopwatch, 
        $scope.recordSplit = StopwatchService.recordSplit, $scope.toggleStopwatch = StopwatchService.toggleStopwatch, 
        $scope.resetStopwatch = StopwatchService.resetStopwatch, initialize();
    }
    angular.module("Serenity.Stopwatch").controller("StopwatchController", [ "$scope", "StopwatchService", Controller ]);
}(), function() {
    function Service($interval) {
        function bankTrackedTime() {
            if (stopwatch.tracking) {
                var now = new Date(), differenceInMs = now.getTime() - stopwatch.timestampTrackingStarted.getTime();
                stopwatch.timeTrackedInMs += differenceInMs, stopwatch.timestampTrackingStarted = now;
            }
        }
        var self = this, splits = [], stopwatch = {
            timeTrackedInMs: 0,
            timestampTrackingStarted: null,
            tracking: !1,
            trackingInterval: null
        };
        self.getStopwatch = function() {
            return stopwatch;
        }, self.startStopwatch = function() {
            self.stopStopwatch(), stopwatch.tracking = !0, stopwatch.timestampTrackingStarted = new Date(), 
            stopwatch.trackingInterval = $interval(function() {
                bankTrackedTime();
            }, 50);
        }, self.resetStopwatch = function() {
            stopwatch.timeTrackedInMs = 0, splits.length = 0;
        }, self.stopStopwatch = function() {
            bankTrackedTime(), stopwatch.tracking = !1, $interval.cancel(stopwatch.trackingInterval), 
            stopwatch.timestampTrackingStarted = null;
        }, self.toggleStopwatch = function() {
            stopwatch.tracking ? self.stopStopwatch() : self.startStopwatch();
        }, self.getSplits = function() {
            return splits;
        }, self.recordSplit = function() {
            if (stopwatch.tracking) {
                bankTrackedTime();
                var split = {
                    timestamp: new Date(),
                    timeTrackedInMs: stopwatch.timeTrackedInMs
                };
                splits.push(split);
            }
        };
    }
    angular.module("Serenity.Stopwatch").service("StopwatchService", [ "$interval", Service ]);
}(), function() {
    angular.module("Serenity", [ "ui.router", "ui.bootstrap", "Serenity.Filter", "Serenity.Stopwatch", "Serenity.Countdown" ]), 
    angular.module("Serenity").constant("applicationName", "Serenity").constant("versionNumber", "v0.0.1"), 
    angular.module("Serenity").controller("AppCtrl", [ "$scope", "$interval", function($scope, $interval) {} ]);
}();